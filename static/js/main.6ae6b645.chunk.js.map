{"version":3,"sources":["main.js","App.js","reportWebVitals.js","index.js"],"names":["Main","addtransaction","newtransactiondetail","state","newtransactionamount","charAt","setState","expense","Number","newtransaction","id","transactiondetail","transactionamount","balance","income","currentbalance","transactionhistory","alert","this","map","v","i","onChange","e","target","value","type","onClick","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAgHeA,E,kDA7GX,aAAe,IAAD,8BACV,gBAgCJC,eAAiB,WACb,IAAIC,EAAuB,EAAKC,MAAMD,qBAClCE,EAAuB,EAAKD,MAAMC,qBAClCF,GAAiD,KAAzBE,EACe,MAAnCA,EAAqBC,OAAO,GAC5B,EAAKC,SAAS,CACVC,QAAS,EAAKJ,MAAMI,QAAUC,OAAOJ,KACtC,WACC,IAAIK,EAAiB,CACjBC,GAAIN,EACJO,kBAAmBT,EACnBU,kBAAmBR,GAEnBS,EAAU,EAAKV,MAAMW,OAAS,EAAKX,MAAMI,QAC7C,EAAKD,SAAS,CACVS,eAAgBF,EAChBG,mBAAmB,GAAD,mBAAM,EAAKb,MAAMa,oBAAjB,CAAqCP,IACvDP,qBAAsB,GACtBE,qBAAsB,QAI9B,EAAKE,SAAS,CACVQ,OAAQ,EAAKX,MAAMW,OAASN,OAAOJ,KACpC,WACC,IAAIK,EAAiB,CACjBC,GAAIN,EACJO,kBAAmBT,EACnBU,kBAAmBR,GAEnBS,EAAU,EAAKV,MAAMW,OAAS,EAAKX,MAAMI,QAC7C,EAAKD,SAAS,CACVS,eAAgBF,EAChBG,mBAAmB,GAAD,mBAAM,EAAKb,MAAMa,oBAAjB,CAAqCP,IACvDP,qBAAsB,GACtBE,qBAAsB,QAKlCa,MAAM,kBAvEV,EAAKd,MAAQ,CACTY,eAAgB,KAChBD,OAAQ,KACRP,SAAU,IACVS,mBAAoB,CAChB,CACIN,GAAI,IACJC,kBAAmB,mBACnBC,kBAAmB,SAEvB,CACIF,GAAI,IACJC,kBAAmB,mBACnBC,kBAAmB,SAEvB,CACIF,GAAI,IACJC,kBAAmB,oBACnBC,kBAAmB,SAEvB,CACIF,GAAI,IACJC,kBAAmB,oBACnBC,kBAAmB,UAG3BV,qBAAsB,GACtBE,qBAAsB,IA7BhB,E,0CA4Ed,WAAU,IAAD,OACL,OACI,gCACI,+BACI,6BAAI,+DACJ,6BAAI,mDACJ,6BAAKc,KAAKf,MAAMY,iBAChB,6BAAI,0CACJ,6BAAKG,KAAKf,MAAMW,SAChB,6BAAI,2CACJ,6BAAKI,KAAKf,MAAMI,UAChB,6BAAI,uDACJ,6BAAKW,KAAKf,MAAMa,mBAAmBG,KAAI,SAACC,EAAGC,GACvC,OACI,6BACI,qBAAIX,GAAIU,EAAEV,GAAV,UACKU,EAAET,kBACFS,EAAER,sBAHFS,QAQjB,6BAAI,mDACJ,6CACA,6BAAI,uBAAOC,SAAU,SAACC,GAAD,OAAO,EAAKjB,SAAS,CAAEJ,qBAAsBqB,EAAEC,OAAOC,SAAUA,MAAOP,KAAKf,MAAMD,yBACvG,oDACA,6BAAI,uBAAOwB,KAAK,SAASJ,SAAU,SAACC,GAAD,OAAO,EAAKjB,SAAS,CAAEF,qBAAsBmB,EAAEC,OAAOC,SAAUA,MAAOP,KAAKf,MAAMC,4BAEzH,wBAAQuB,QAAST,KAAKjB,eAAtB,oC,GAzGG2B,aCQJC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6ae6b645.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Main extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            currentbalance: 15000,\r\n            income: 25000,\r\n            expense: -10000,\r\n            transactionhistory: [\r\n                {\r\n                    id: '1',\r\n                    transactiondetail: 'project 1 income',\r\n                    transactionamount: '10000',\r\n                },\r\n                {\r\n                    id: '2',\r\n                    transactiondetail: 'project 2 income',\r\n                    transactionamount: '15000',\r\n                },\r\n                {\r\n                    id: '3',\r\n                    transactiondetail: 'project 1 expense',\r\n                    transactionamount: '-5000',\r\n                },\r\n                {\r\n                    id: '4',\r\n                    transactiondetail: 'project 2 expense',\r\n                    transactionamount: '-5000',\r\n                },\r\n            ],\r\n            newtransactiondetail: '',\r\n            newtransactionamount: '',\r\n        }\r\n    }\r\n\r\n    addtransaction = () => {\r\n        let newtransactiondetail = this.state.newtransactiondetail;\r\n        let newtransactionamount = this.state.newtransactionamount;\r\n        if (newtransactiondetail && newtransactionamount !== '') {\r\n            if (newtransactionamount.charAt(0) === '-') {\r\n                this.setState({\r\n                    expense: this.state.expense + Number(newtransactionamount),\r\n                }, () => {\r\n                    var newtransaction = {\r\n                        id: newtransactionamount,\r\n                        transactiondetail: newtransactiondetail,\r\n                        transactionamount: newtransactionamount,\r\n                    }\r\n                    var balance = this.state.income + this.state.expense;\r\n                    this.setState({\r\n                        currentbalance: balance,\r\n                        transactionhistory: [...this.state.transactionhistory, newtransaction],\r\n                        newtransactiondetail: '',\r\n                        newtransactionamount: ''\r\n                    })\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    income: this.state.income + Number(newtransactionamount)\r\n                }, () => {\r\n                    var newtransaction = {\r\n                        id: newtransactionamount,\r\n                        transactiondetail: newtransactiondetail,\r\n                        transactionamount: newtransactionamount,\r\n                    }\r\n                    var balance = this.state.income + this.state.expense;\r\n                    this.setState({\r\n                        currentbalance: balance,\r\n                        transactionhistory: [...this.state.transactionhistory, newtransaction],\r\n                        newtransactiondetail: '',\r\n                        newtransactionamount: ''\r\n                    })\r\n                })\r\n            }\r\n        } else {\r\n            alert('insert detail')\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    <li><h2>Kb khila rahy ho khaousa :)</h2></li>\r\n                    <li><h2>current balance</h2></li>\r\n                    <li>{this.state.currentbalance}</li>\r\n                    <li><h2>Income</h2></li>\r\n                    <li>{this.state.income}</li>\r\n                    <li><h2>expense</h2></li>\r\n                    <li>{this.state.expense}</li>\r\n                    <li><h2>transaction history</h2></li>\r\n                    <li>{this.state.transactionhistory.map((v, i) => {\r\n                        return (\r\n                            <ul key={i}>\r\n                                <li id={v.id}>\r\n                                    {v.transactiondetail}\r\n                                    {v.transactionamount}\r\n                                </li>\r\n                            </ul>\r\n                        )\r\n                    })}</li>\r\n                    <li><h2>Add transaction</h2></li>\r\n                    <li>Description</li>\r\n                    <li><input onChange={(e) => this.setState({ newtransactiondetail: e.target.value })} value={this.state.newtransactiondetail} /></li>\r\n                    <li>transaction amount</li>\r\n                    <li><input type=\"number\" onChange={(e) => this.setState({ newtransactionamount: e.target.value })} value={this.state.newtransactionamount} /></li>\r\n                </ul>\r\n                <button onClick={this.addtransaction}>add transaction</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Main;","import Main from './main'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}